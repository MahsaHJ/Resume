{"version":3,"sources":["components/Fullpage.js","sections/NavbarSection.js","components/DownIcon.js","sections/TitlesSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","Component","NavbarSection","id","build_default","preserveRasters","href","DownIcon","onClick","style","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","src","icon","TitlesSection","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","color","changeColor","bind","assertThisInitialized","setState","_this2","src_components_Fullpage","onMouseOver","onMouseLeave","data","title","subtitle","keys","links","map","key","react_social_icons","url","modules","activeClass","to","spy","smooth","offset","duration","delay","components_DownIcon","icons","down","name","AboutSection","sections","items","p","content","SkillCard","skill","image","eachSkill","src_components_SkillCard","App","src_sections_NavbarSection","src_sections_TitlesSection","src_sections_AboutSection","sections_SkillSection","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4f764ee1.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Fullpage.css'\n\nclass Fullpage extends Component {\n    render() {\n        const { children } = this.props\n        return (\n            <div className={`fullpage ${this.props.className || ''}`}>\n                {children}\n            </div>\n        )\n    }\n}\n\nexport default Fullpage","import React, { Component } from 'react';\r\nimport NavBar, { ElementsWrapper } from 'react-scrolling-nav';\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport './NavbarSection.css';\r\nimport ResponsiveMenu from 'react-responsive-navbar';\r\nimport ThemeSwitch from 'react-theme-switch';\r\n \r\n//class NavbarSection extends Component {\r\n//  render() {\r\n  //  return (\r\n    //  <ResponsiveMenu\r\n      //  menuOpenButton={<div />}\r\n//        menuCloseButton={<div />}\r\n  //      changeMenuOn=\"500px\"\r\n    //    largeMenuClassName=\"large-menu-classname\"\r\n      //  smallMenuClassName=\"small-menu-classname\"\r\n//        menu={\r\n  //        <ul>\r\n    //        <li><a href=\".TitleSection\">Item 1</a></li>\r\n      //      <a href=\".AboutSection\">Item 1</a>\r\n        //    <a href=\".SkilSection\">Item 1</a>\r\n//          </ul>\r\n  //      }\r\n    //  />\r\n//    );\r\n // }\r\n//}\r\nclass NavbarSection extends Component {\r\n    render() {\r\n        return (\r\n          <div>\r\n            \r\n            <header id=\"home\">\r\n                <nav id=\"nav-wrap\">\r\n\r\n                    <ul id=\"nav\" className=\"nav\">\r\n                        <li><ThemeSwitch preserveRasters /></li>\r\n                        <li><a href=\"#title\">Title</a></li>\r\n                        <li><a href=\"#about\">About</a></li>\r\n                        <li><a href=\"#skills\">Skills</a></li>\r\n                    </ul>\r\n\r\n                </nav>\r\n\r\n            </header>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default NavbarSection;","import React, {Component} from \"react\";\n\nconst DownIcon = (props) => {\n    return (\n        <div\n        onClick={props.onClick}\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginBottom: \"-34px\",\n          transform: \"translateY(-45px)\"\n        }}\n      >\n        <div\n          style={{\n            maxWidth: \"40px\"\n          }}\n        >\n          <img src={props.icon} />\n        </div>\n      </div>\n    )\n}\n\nexport default DownIcon","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport { SocialIcon } from \"react-social-icons\";\nimport \"./TitlesSection.css\";\nimport DownIcon from \"../components/DownIcon\";\nimport { Link, Element } from \"react-scroll\";\n\nclass TitlesSection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      color: \"white\"\n    };\n    this.changeColor = this.changeColor.bind(this);\n  }\n\n  changeColor() {\n    this.setState({\n      color: this.state.color === \"white\" ? \"black\" : \"white\"\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"title\">\n        <Fullpage className=\"first\">\n          <h1\n            className=\"title\"\n            style={{\n              color: this.state.color\n            }}\n            onMouseOver={this.changeColor}\n            onMouseLeave={() => {\n              this.changeColor();\n            }}\n          >\n            {data.title}\n          </h1>\n          <div>\n            <h2>{data.subtitle}</h2>\n          </div>\n          <div className=\"icons-wrapper\">\n            {Object.keys(data.links).map(key => {\n              return (\n                <div className=\"icon\">\n                  <SocialIcon url={data.links[key]} />\n                </div>\n              );\n            })}\n          </div>\n        </Fullpage>\n        <Link\n          activeClass=\"active\"\n          to=\"about\"\n          spy={true}\n          smooth={true}\n          offset={0}\n          duration={500}\n          delay={0}\n        >\n          <DownIcon\n            icon={data.icons.down}\n          />\n        </Link>\n        <Element name=\"about\" className=\"element\" />\n      </div>\n    );\n  }\n}\n\nexport default TitlesSection;\n","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport './AboutSection.css'\n\nclass AboutSection extends Component {\n  render() {\n    return (\n      <div id=\"about\">\n      <Fullpage className=\"second\">\n        <h3>{data.sections[0].title}</h3>\n        <div>\n          {data.sections[0].items.map(p => {\n            return <p>{p.content}</p>;\n          })}\n        </div>\n      </Fullpage>\n      </div>\n    );\n  }\n}\n\nexport default AboutSection;\n","import React, { Component } from \"react\";\nimport \"./SkillCard.css\";\n\nclass SkillCard extends Component {\n  render() {\n    const { skill } = this.props;\n    return (\n      <div className=\"card\">\n        <div className=\"image-wrapper\">\n          <img src={skill.content.image} />\n        </div>\n        <div className=\"skill-title-wrapper\">\n          <h4>{skill.content.title}</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SkillCard;\n","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport SkillCard from '../components/SkillCard';\n\nimport \"./SkillSection.css\";\n\nclass AboutSection extends Component {\n  render() {\n    return (\n      <div id=\"skills\">\n      <Fullpage className=\"third\">\n        <h3>{data.sections[1].title} </h3>\n        <div className=\"cards-wrapper\">\n          {data.sections[1].items.map(eachSkill => {\n            return (\n              <SkillCard skill={eachSkill}/>\n            );\n          })}\n        </div>\n      </Fullpage>\n      </div>\n    );\n  }\n}\n\nexport default AboutSection;\n","import React, { Component } from \"react\";\n\nimport NavbarSection from \"./sections/NavbarSection\";\nimport TitlesSection from \"./sections/TitlesSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport ThemeSwitch from 'react-theme-switch';\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"navigation\" />\n        \n        <NavbarSection>\n        \n        </NavbarSection>\n        \n        <TitlesSection />\n        <AboutSection />\n        <SkillSection />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}